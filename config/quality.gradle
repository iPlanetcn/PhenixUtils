apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// Add checkstyle, findbugs, pmd and lint to the check task.
dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:8.1'
    findbugs 'com.google.code.findbugs:findbugs:3.0.1'
}

pmd {
    toolVersion = '5.8.1'
}

def configDir = "${project.rootDir}/config/quality"
def reportsDir = "${project.buildDir}/reports"
def ABORT_ON_ERROR = true
def XML_ENABLED = true
def HTML_ENABLED = !XML_ENABLED
check.dependsOn 'checkstyle', /*'findbugs',*/ 'pmd', 'lint'

task checkstyle(type: Checkstyle, group: 'Verification', description: 'Runs code style checks') {
    ignoreFailures = ABORT_ON_ERROR

    configFile file("$configDir/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()

    reports {
        xml.enabled = XML_ENABLED
        html.enabled = HTML_ENABLED
        xml {
            destination file("$reportsDir/checkstyle/checkstyle-result.xml")
        }
        html {
            destination file("$reportsDir/checkstyle/checkstyle-result.html")
        }
    }
}

task findbugs(type: FindBugs, group: 'Verification', description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources', 'compileReleaseSources']) {
    ignoreFailures = ABORT_ON_ERROR

    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/findbugs-filter.xml")
    classes = files("$project.rootDir/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = XML_ENABLED
        html.enabled = HTML_ENABLED
        xml {
            destination file("$reportsDir/findbugs/findbugs-result.xml")
        }
        html {
            destination file("$reportsDir/findbugs/findbugs-result.html")
        }
    }

    classpath = files()
}

task pmd(type: Pmd, group: 'Verification', description: 'Inspect sourcecode for bugs') {
    ignoreFailures = ABORT_ON_ERROR

    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = XML_ENABLED
        html.enabled = HTML_ENABLED
        xml {
            destination file("$reportsDir/pmd/pmd-result.xml")
        }
        html {
            destination file("$reportsDir/pmd/pmd-result.html")
        }
    }
}

android {
    lintOptions {
        abortOnError ABORT_ON_ERROR
        xmlReport XML_ENABLED
        htmlReport HTML_ENABLED
        lintConfig file("$configDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-result.html")
        xmlOutput file("$reportsDir/lint/lint-result.xml")
    }
}